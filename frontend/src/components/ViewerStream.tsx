import React, { useEffect, useState } from 'react';
import { RemoteMedia } from './RemoteMedia';
import { Chat } from './Chat';
import { useRoomClient } from '../hooks/useRoomClient';

interface ViewerStreamProps {
    userName: string;
    onExit: () => void;
}

const STREAM_ROOM_ID = 'main-stream'; // ‚úÖ –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ –¥–ª—è —Å—Ç—Ä–∏–º–∞

export const ViewerStream: React.FC<ViewerStreamProps> = ({ userName, onExit }) => {
    const [streamActive, setStreamActive] = useState(false);

    // –•—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–Ω–∞—Ç–æ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞)
    const {
        state,
        joinRoom,
        socket,
        remoteStreams,
        participants,
    } = useRoomClient({ 
        roomId: STREAM_ROOM_ID, 
        userName: `üë§ ${userName}` // –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∑—Ä–∏—Ç–µ–ª—è
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –≤ –∫–æ–º–Ω–∞—Ç—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    useEffect(() => {
        if (!state.joined) {
            console.log('üöÄ Viewer joining stream room');
            joinRoom();
        }
    }, [state.joined, joinRoom]);

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Å—Ç—Ä–∏–º–∞
    useEffect(() => {
        if (!socket) return;

        const handleStreamStarted = () => {
            console.log('üì∫ Stream started');
            setStreamActive(true);
        };

        const handleStreamStopped = () => {
            console.log('üì∫ Stream stopped');
            setStreamActive(false);
        };

        socket.on('streamStarted', handleStreamStarted);
        socket.on('streamStopped', handleStreamStopped);

        return () => {
            socket.off('streamStarted', handleStreamStarted);
            socket.off('streamStopped', handleStreamStopped);
        };
    }, [socket]);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç—Ä–∏–º –ø–æ –Ω–∞–ª–∏—á–∏—é remote streams
    useEffect(() => {
        const hasVideoStream = remoteStreams.some(stream => stream.kind === 'video');
        setStreamActive(hasVideoStream);
    }, [remoteStreams]);

    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏
    const isLoading = !state.deviceReady || !state.transportsReady;

    // –ù–∞–π—Ç–∏ –∞–¥–º–∏–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const adminName = participants.find(p => p.startsWith('üëë'))?.replace('üëë ', '');

    return (
        <div style={{ padding: 20 }}>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 20 }}>
                <h1>üì∫ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∏–º–∞</h1>
                <button 
                    onClick={onExit}
                    style={{ 
                        padding: '8px 16px', 
                        backgroundColor: '#f44336', 
                        color: 'white', 
                        border: 'none', 
                        borderRadius: 4,
                        cursor: 'pointer'
                    }}
                >
                    –í—ã–π—Ç–∏
                </button>
            </div>
            
            <div style={{ marginBottom: 16, padding: 12, backgroundColor: '#e3f2fd', borderRadius: 4 }}>
                <strong>–ó—Ä–∏—Ç–µ–ª—å:</strong> {userName}
                {adminName && (
                    <span style={{ marginLeft: 16, color: '#666' }}>
                        –°—Ç—Ä–∏–º–µ—Ä: {adminName}
                    </span>
                )}
            </div>

            {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
            <div style={{ fontSize: '12px', color: '#666', marginBottom: 16 }}>
                –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {participants.length} | –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {state.joined ? '‚úÖ' : '‚è≥'}
            </div>

            {isLoading && (
                <div style={{ padding: 40, textAlign: 'center' }}>
                    <div style={{ fontSize: '18px', marginBottom: 16 }}>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—Ç—Ä–∏–º—É...</div>
                    <div style={{ color: '#666' }}>–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º</div>
                </div>
            )}

            {!isLoading && (
                <>
                    {!streamActive ? (
                        <div style={{ 
                            padding: 40, 
                            textAlign: 'center', 
                            backgroundColor: '#fff3e0', 
                            borderRadius: 8,
                            border: '2px solid #ff9800',
                            marginBottom: 32
                        }}>
                            <div style={{ fontSize: '24px', marginBottom: 16 }}>‚è≥</div>
                            <h3 style={{ color: '#e65100', marginBottom: 8 }}>–°—Ç—Ä–∏–º –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω</h3>
                            <p style={{ color: '#bf360c' }}>
                                –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–∫–∞ –Ω–µ –Ω–∞—á–∞–ª —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é. 
                                <br />–û–∂–∏–¥–∞–π—Ç–µ –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–∏–º–∞ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —á–∞—Ç–æ–º.
                            </p>
                        </div>
                    ) : (
                        <div style={{ 
                            padding: 16, 
                            backgroundColor: '#e8f5e8', 
                            borderRadius: 8,
                            border: '2px solid #4caf50',
                            marginBottom: 32
                        }}>
                            <div style={{ fontSize: '18px', color: '#2e7d32', fontWeight: 'bold' }}>
                                üî¥ –°—Ç—Ä–∏–º –∞–∫—Ç–∏–≤–µ–Ω
                            </div>
                        </div>
                    )}

                    {/* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å –≤–∏–¥–µ–æ –∏ —á–∞—Ç–æ–º */}
                    <div style={{ display: 'flex', gap: 32, alignItems: 'flex-start' }}>
                        <div style={{ flex: 1 }}>
                            {streamActive ? (
                                <div>
                                    <h3>üì∫ –ü—Ä—è–º–∞—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è</h3>
                                    <RemoteMedia remoteStreams={remoteStreams} />
                                </div>
                            ) : (
                                <div style={{ 
                                    minHeight: 300, 
                                    backgroundColor: '#f5f5f5', 
                                    borderRadius: 8,
                                    display: 'flex',
                                    alignItems: 'center',
                                    justifyContent: 'center',
                                    border: '2px dashed #ccc'
                                }}>
                                    <div style={{ textAlign: 'center', color: '#666' }}>
                                        <div style={{ fontSize: '48px', marginBottom: 16 }}>üì∫</div>
                                        <div>–í–∏–¥–µ–æ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å –∫–æ–≥–¥–∞ —Å—Ç—Ä–∏–º –Ω–∞—á–Ω–µ—Ç—Å—è</div>
                                    </div>
                                </div>
                            )}
                        </div>
                        
                        <Chat 
                            socket={socket} 
                            userName={`üë§ ${userName}`} 
                            roomId={STREAM_ROOM_ID} 
                        />
                    </div>
                </>
            )}

            {state.error && (
                <div style={{ color: 'red', marginTop: 16, padding: 12, backgroundColor: '#ffebee', borderRadius: 4 }}>
                    –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {state.error}
                </div>
            )}
        </div>
    );
}; 